version: "3.8"

services:
  postgres:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_PORT: $POSTGRES_PORT
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  minio:
    image: minio/minio
    restart: always
    environment:
      MINIO_ACCESS_KEY: $MINIO_ACCESS_KEY
      MINIO_SECRET_KEY: $MINIO_SECRET_KEY
    ports:
      - "9000:9000"
    volumes:
      - minio_data:/data
    command: server /data

  rabbitmq:
    image: "rabbitmq:3-management"
    environment:
      RABBITMQ_DEFAULT_USER: $RABBITMQ_DEFAULT_USER
      RABBITMQ_DEFAULT_PASS: $RABBITMQ_DEFAULT_PASS
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  weaviate:
    image: cr.weaviate.io/semitechnologies/weaviate:1.24.17
    ports:
      - "8080:8080"
      - "50051:50051"
    volumes:
      - weaviate_data:/var/lib/weaviate
    restart: on-failure:0
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: "true"
      PERSISTENCE_DATA_PATH: "/var/lib/weaviate"
      DEFAULT_VECTORIZER_MODULE: "none"
      ENABLE_MODULES: "text2vec-cohere,text2vec-huggingface,text2vec-palm,text2vec-openai,generative-openai,generative-cohere,generative-palm,ref2vec-centroid,reranker-cohere,qna-openai"
      CLUSTER_HOSTNAME: "node1"
    command:
      - --host
      - 0.0.0.0
      - --port
      - "8080"
      - --scheme
      - http

  assistants_api:
    build:
      context: ./assistants_api
      dockerfile: Dockerfile
    volumes:
      - ./assistants_api/app:/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - minio
      - rabbitmq
      - weaviate
    environment:
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_PORT: $POSTGRES_PORT
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      OPENAI_API_KEY: $OPENAI_API_KEY
      MINIO_ENDPOINT: minio
      MINIO_ACCESS_KEY: $MINIO_ACCESS_KEY
      MINIO_SECRET_KEY: $MINIO_SECRET_KEY
      RABBITMQ_DEFAULT_USER: $RABBITMQ_DEFAULT_USER
      RABBITMQ_DEFAULT_PASS: $RABBITMQ_DEFAULT_PASS
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: $RABBITMQ_PORT
      WEAVIATE_HOST: weaviate
    command:  sh -c "sleep 10 && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
  run_executor_worker:
    build:
      context: ./run_executor_worker
      dockerfile: Dockerfile
    volumes:
      - ./run_executor_worker:/app
    depends_on:
      - postgres
      - minio
      - rabbitmq
      - weaviate
    environment:
      MAX_WORKERS: 12
      RABBITMQ_DEFAULT_USER: $RABBITMQ_DEFAULT_USER
      RABBITMQ_DEFAULT_PASS: $RABBITMQ_DEFAULT_PASS
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: $RABBITMQ_PORT
      OPENAI_API_KEY: $OPENAI_API_KEY
      ASSISTANTS_API_URL: http://assistants_api:8000
      LITELLM_API_URL: $LITELLM_API_URL
      LITELLM_API_KEY: $LITELLM_API_KEY
      LITELLM_MODEL: $LITELLM_MODEL
      WEAVIATE_HOST: weaviate
      FC_API_URL: $FC_API_URL
      FC_API_KEY: $FC_API_KEY
      FC_MODEL: $FC_MODEL

    command: sh -c "sleep 10 && python scripts/watcher.py"

volumes:
  postgres_data:
  minio_data:
  rabbitmq_data:
  weaviate_data:
